<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!-- parent -->
    <parent>
        <groupId>com.st.tools</groupId>
        <artifactId>tspr</artifactId>
        <version>tv20210521</version>
    </parent>

    <artifactId>stcommon</artifactId>
    <version>TV20210629</version>
    <modelVersion>4.0.0</modelVersion>

    <properties>
    </properties>



    <dependencies>


    </dependencies>

    <build>
        <plugins>

            <!--
                        <plugin>
            &lt;!&ndash;
                            该插件不要放到顶级父模块中,因为会被各个子模块继承
                            maven执行package之后, 如果该模块的jar不可执行, 则不应该放该插件
                            maven执行package之后, 如果该模块的jar(需要/可)执行, 则应该放该插件
            &ndash;&gt;
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-maven-plugin</artifactId>
                            <configuration>
                                <fork>true</fork>
                                <addResources>true</addResources>
                                <mainClass>${mainClass}</mainClass>
                            </configuration>
                        </plugin>
            -->


            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.version}</version>
                <configuration>
                    <argLine>@{argLine} -javaagent:${settings.localRepository}/com/alibaba/testable/testable-agent/${testable.version}/testable-agent-${testable.version}.jar</argLine>
                    <!--<skipTests>false</skipTests>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                    <reuseForks>false</reuseForks>
                    <forkCount>1</forkCount>-->
                </configuration>
            </plugin>

            <!--<plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>-->

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <configuration>
                    <!--指定生成 .exec 文件的存放位置-->
                    <destFile>target/coverage-reports/jacoco-unit.exec</destFile>
                    <!--Jacoco 是根据 .exec 文件生成最终的报告，所以需指定 .exec 的存放路径-->
                    <dataFile>target/coverage-reports/jacoco-unit.exec</dataFile>
                </configuration>
                <executions>
                    <execution>
                        <id>jacoco-initialize</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-site</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


        </plugins>
    </build>


</project>