<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <groupId>com.st.tools</groupId>
    <artifactId>stcommon</artifactId>
    <version>TV20210629</version>
    <modelVersion>4.0.0</modelVersion>

    <properties>
        <!--配置maven编译jdk的版本.效果同maven的setting.xml中的jdk设置-->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <java.version>1.8</java.version>
        <junit5.verson>5.8.1</junit5.verson>
        <apache.commons.version>3.8.1</apache.commons.version>
        <guava.version>31.0.1-jre</guava.version>
        <hutool.version>5.7.16</hutool.version>
        <lombok.version>1.18.22</lombok.version>
        <gson.version>2.8.9</gson.version>
        <log.logback.version>1.2.6</log.logback.version>
        <slf4j.jcl.version>1.7.32</slf4j.jcl.version>
        <slf4j.version>1.7.32</slf4j.version>
        <fastjson.version>1.2.76</fastjson.version>
        <mockito.version>4.0.0</mockito.version>
        <powermock.version>2.0.2</powermock.version>
        <testable.version>0.7.0</testable.version>
        <jacoco.version>0.8.7</jacoco.version>
        <surefire.version>3.0.0-M5</surefire.version>
        <okhttp.version>4.9.1</okhttp.version>
    </properties>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit5.verson}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <dependencies>

        <!-- ******************** junit 5,4 ****************** -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <!-- 范围不能是test, 否则该依赖不能打入包里, 在istall时没有, 导致其他模块依赖时, 不能使用junit-->
            <!--            <scope>test</scope>-->
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <!-- 范围不能是test, 否则该依赖不能打入包里, 在istall时没有, 导致其他模块依赖时, 不能使用junit-->
            <!--            <scope>test</scope>-->
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <!--            <scope>test</scope>-->
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.19.0</version>
            <!--            <scope>test</scope>-->
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.mockito/mockito-core -->
        <!-- mockito 与junit5 整合 -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- 阿里巴巴 testablemock -->
        <dependency>
            <groupId>com.alibaba.testable</groupId>
            <artifactId>testable-all</artifactId>
            <version>${testable.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.jacoco/jacoco-maven-plugin -->
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin -->
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire.version}</version>
        </dependency>



        <!-- ******************** logback  ****************** -->
        <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${log.logback.version}</version>
            <scope>compile</scope>
        </dependency>
        <!--         https://mvnrepository.com/artifact/org.slf4j/slf4j-simple-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
            <!-- 注意，若无type为jar则报错-->
            <type>jar</type>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.slf4j/jcl-over-slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.jcl.version}</version>
        </dependency>


        <!-- ******************** lombok   ****************** -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>compile</scope>
        </dependency>


        <!-- ******************** json:gson+fastJson  ****************** -->
        <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.alibaba/fastjson -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>


        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${apache.commons.version}</version>
        </dependency>


        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr-runtime</artifactId>
            <version>3.0.1</version>
        </dependency>


        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>5.0.2.RELEASE</version>
        </dependency>


        <!--https://hutool.cn/docs/#/-->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutool.version}</version>
        </dependency>


        <!-- https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp -->
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>${okhttp.version}</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <!--
                        <plugin>
            &lt;!&ndash;
                            该插件不要放到顶级父模块中,因为会被各个子模块继承
                            maven执行package之后, 如果该模块的jar不可执行, 则不应该放该插件
                            maven执行package之后, 如果该模块的jar(需要/可)执行, 则应该放该插件
            &ndash;&gt;
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-maven-plugin</artifactId>
                            <configuration>
                                <fork>true</fork>
                                <addResources>true</addResources>
                                <mainClass>${mainClass}</mainClass>
                            </configuration>
                        </plugin>
            -->


            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.version}</version>
                <configuration>
                    <argLine>@{argLine} -javaagent:${settings.localRepository}/com/alibaba/testable/testable-agent/${testable.version}/testable-agent-${testable.version}.jar</argLine>
                    <!--<skipTests>false</skipTests>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                    <reuseForks>false</reuseForks>
                    <forkCount>1</forkCount>-->
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


        </plugins>
    </build>


</project>